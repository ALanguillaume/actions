name: 'check-r-package'
description: 'Action to check R package with rcmdcheck. Assumes that rcmdcheck has already been installed.'
author: 'Jim Hester'
inputs:
  args:
    description: 'Arguments to pass to the `args` parameter of rcmdcheck'
    default: '"--no-manual", "--as-cran"'
  build_args:
    description: 'Arguments to pass to the `build_args` parameter of rcmdcheck'
    default: '"--no-manual"'
  error-on:
    description: 'What type of result should cause a build error?'
    default: '"warning"'
  check-dir:
    description: 'Where should the check output go?'
    default: '"check"'
runs:
  using: "composite"
  steps:
    - name: "@v1 is deprecated"
      run: |
        echo "::warning r-lib/action/check-r-packages@v1 is deprecated. Please update your workflow to use the '@v2' version. Also look at the examples at https://github.com/r-lib/actions/tree/v2/examples because '@v2' workflows are much simpler than '@v1' workflows."
      shell: bash

    - name: Check
      env:
        _R_CHECK_CRAN_INCOMING_: false
      run: |
        options(crayon.enabled = TRUE)
        rcmdcheck::rcmdcheck(args = c(${{ inputs.args }}), build_args = c(${{ inputs.build_args }}), error_on = ${{ inputs.error-on }}, check_dir = ${{ inputs.check-dir }})
      shell: Rscript {0}
